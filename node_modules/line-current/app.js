//Line-current module
//Made by willmil11
//Version 1.0.0
//
//

var linecurrent = {
    "get": async function(formatted){
        var before = Date.now();
        var process = require("process");
        //Get current line
        process.stdout.write('\x1b[6n'); // Send ANSI escape code to query cursor position
        //Avoid writing current line rawly to terminal
        process.stdin.setRawMode(true);
        process.stdin.resume();

        var getlineend = false;
        var line;

        //Process raw current line and write it correctly into terminal
        process.stdin.once('data', function(data){
            var match = data.toString().match(/\x1b\[(\d+);(\d+)R/);
            if (match){
                var cursorLine = parseInt(match[1]);
                line = cursorLine;
            } 
            else{
                console.log('Unable to retrieve cursor line.');
            }
            getlineend = true;
        });
        while (getlineend === false){
            await new Promise(resolve => setTimeout(resolve, 1));
        }
        line -= 1;
        //Got to line where escape code have been written
        //Disable raw mode
        //Remove changes
        //"line" var is current line
        process.stdin.setRawMode(false);
        process.stdin.pause();
        process.stdout.cursorTo(0, line);
        process.stdout.clearLine();
        var after = Date.now();
        var time = after - before;
        var response = {
            "current-line": line,
            "processtime": (time + "ms")
        }
        if (!(formatted === null || formatted === undefined)){
            //If formatted is true or "true"
            if (formatted === true || formatted.toLowerCase() === "true"){
                return JSON.stringify(response, null, 2);
            }
            else{
                return JSON.stringify(response);
            }
        }
        else{
            return JSON.stringify(response);
        }
    }
}

//Export as module
module.exports = linecurrent;